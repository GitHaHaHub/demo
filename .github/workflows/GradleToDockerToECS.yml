name: Gradle->Docker->ECS

on:
  push:
    branches:
      - main


jobs:
    build:
        runs-on: ubuntu-20.04
        permissions:
            contents: read

        steps:
            - uses: actions/checkout@v4

            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: '17'
                  distribution: 'temurin'

            - name: Setup Gradle 8.10
              uses: gradle/actions/setup-gradle@v4
              with:
                  gradle-version: "8.10"

            - name: Build with Gradle Wrapper
              run: ./gradlew build
            
            - name: Upload Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: myjar
                  path: build/libs

    dockerize:
        runs-on: ubuntu-20.04
        permissions:
            contents: write

        steps:
            - uses: actions/checkout@v4

            - name: Download Artifact
              uses: actions/download-artifact@v4
              with:
                  name: myjar
                  path: build/libs

            - name: Build the Docker image
              run: docker build . --file Dockerfile --tag demodocker:$(date +%s)
        
    # # push-to-ECR:
    # #     runs-on: ubuntu-20.04
    # #     permissions:
    # #         contents: write

    # #     steps:
    # #         - uses: actions/checkout@v4
    # #         - name: Login to Amazon ECR
    # #           id: login-ecr
    # #           uses: aws-actions/amazon-ecr-login@v2
    # #           with:
    # #               registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    # #               access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    # #               secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # #         - name: Build, tag, and push image to Amazon ECR
    # #           run: |
    # #               docker build . --file Dockerfile --tag ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-image-name:$(date +%s)
    # #               docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-image-name:$(date +%s)
    
    # # deploy-to-ECS:
    # #     runs-on: ubuntu-20.04
    # #     permissions:
    # #         contents: write

    # #     steps:
    # #         - uses: actions/checkout@v4
    # #         - name: Login to Amazon ECR
    # #           id: login-ecr
    # #           uses: aws-actions/amazon-ecr-login@v2
    # #           with:
    # #               registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    # #               access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    # #               secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # #         - name: Deploy to Amazon ECS
    # #           run: |
    # #               aws ecs update-service --cluster my-cluster-name --service my-service-name --force-new-deployment
            